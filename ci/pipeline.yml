resource_types:
- name: slack-notifier
  type: registry-image
  source: {repository: mockersf/concourse-slack-notifier}

resources:
- name: resource-types
  type: git
  icon: playlist-check
  source:
    uri: https://github.com/concourse/resource-types.git
    branch: master

- name: resource-types-website
  type: git
  icon: code-tags
  source:
    uri: git@github.com:concourse/resource-types-website.git
    branch: master
    private_key: ((concourse_bot_access_token))
    submodules: all

- name: oci-build-task
  type: registry-image
  icon: calendar-check
  source: {repository: vito/oci-build-task}

- name: resource-types-website-image
  icon: docker
  type: registry-image
  source:
    repository: concourse/dutyfree
    username: ((docker.username))
    password: ((docker.password))

- name: unit-image
  icon: docker
  type: registry-image
  source:
    repository: concourse/unit

- name: helm-image
  icon: docker
  type: registry-image
  source:
    repository: concourse/helm
    username: ((docker.username))
    password: ((docker.password))

- name: every-6h
  icon: clock-outline
  type: time
  source: {interval: 6h}

- name: notify
  type: slack-notifier
  icon: slack
  source:
    url: ((slack_hook))
    concourse_url: https://ci.concourse-ci.org

jobs:
- name: update-resource-types
  plan:
  - get: resource-types
    trigger: true
  - get: resource-types-website
  - get: unit-image
  - task: update-resource-types
    image: unit-image
    file: resource-types-website/ci/tasks/update-resource-types.yml
  - put: resource-types-website
    params: {repository: resource-types-website}

- name: test
  plan:
  - get: resource-types-website
    trigger: true
  - get: unit-image
  - in_parallel:
    - task: elm-analyse
      image: unit-image
      file: resource-types-website/ci/tasks/elm-analyse.yml
    - try:
        task: go-lint
        image: unit-image
        file: resource-types-website/ci/tasks/go-lint.yml
  - in_parallel:
    - task: elm-tests
      image: unit-image
      file: resource-types-website/ci/tasks/elm-test.yml
    - task: go-tests
      image: unit-image
      file: resource-types-website/ci/tasks/go-test.yml
      params:
        TOKEN: ((github_token))

- name: build-docker
  plan:
  - get: resource-types-website
    passed: [test]
    trigger: true
  - get: oci-build-task
  - in_parallel:
    - task: build-dutyfree
      image: oci-build-task
      privileged: true
      output_mapping: {image: image-df}
      config:
        platform: linux
        params: {CONTEXT: resource-types-website/}
        inputs: [{name: resource-types-website}]
        outputs: [{name: image}]
        caches: [{path: cache-df}]
        run: {path: build}
    - task: build-helm
      image: oci-build-task
      privileged: true
      output_mapping: {image: image-helm}
      config:
        platform: linux
        params:
          DOCKERFILE: resource-types-website/ci/concourse-helm-dockerfile
        inputs: [{name: resource-types-website}]
        outputs: [{name: image}]
        caches: [{path: cache-h}]
        run: {path: build}
  - in_parallel:
    - put: resource-types-website-image
      params: {image: image-df/image.tar}
    - put: helm-image
      params: {image: image-helm/image.tar}

- name: sanity-check
  plan:
  - get: every-6h
    trigger: true
  - get: resource-types-website
    passed: [build-docker]
    trigger: true
  - get: unit-image
  - task: sanity-check
    image: unit-image
    file: resource-types-website/ci/tasks/sanity-check.yml
  on_failure:
    put: notify
    params:
      mode: normal
      alert_type: failed

- name: deploy
  plan:
  - get: resource-types-website
    passed: [sanity-check]
    trigger: true
  - get: helm-image
    passed: [build-docker]
  - task: helm-deploy
    image: helm-image
    file: resource-types-website/ci/tasks/helm-deploy.yml
    params:
      TOKEN: ((github_token))
      KUBE_CONFIG: ((kube_config))
